name: nbvalx CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * WED"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenMPI
        run: |
          sudo apt install libopenmpi-dev
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install nbvalx
        run: |
          python3 -m pip install .[docs,lint,notebooks,tests]
      - name: Clean build files
        run: |
          git clean -xdf
      - name: Run ruff on python files
        run: |
          python3 -m ruff .
      - name: Run isort on python files
        run: |
          python3 -m isort --check --diff .
      - name: Run mypy on python files
        run: |
          python3 -m mypy --exclude=conftest.py .
          python3 -m mypy tests/notebooks/conftest.py
          python3 -m mypy tests/unit/conftest.py
      - name: Run yamllint on workflows
        run: |
          python3 -m yamllint -d "{extends: default, rules: {document-start: {present: false}, line-length: disable, truthy: {check-keys: false}}}" .
      - name: Run documentation generation
        run: |
          cd docs && python3 -m sphinx -W -b html . build/html
      - name: Run unit tests (serial)
        run: |
          COVERAGE_FILE=.coverage_unit_serial python3 -m coverage run --source=nbvalx -m pytest tests/unit
      - name: Run unit tests (parallel)
        run: |
          COVERAGE_FILE=.coverage_unit_parallel mpirun -n 2 python3 -m coverage run --source=nbvalx --parallel-mode -m pytest tests/unit
      - name: Generate notebooks test files
        run: |
          NO_TESTS_COLLECTED=5
          COVERAGE_FILE=.coverage_notebooks_serial_create_without_collapse python3 -m coverage run --source=nbvalx -m pytest --ipynb-action=create-notebooks tests/notebooks || (($?==$NO_TESTS_COLLECTED))
          COVERAGE_FILE=.coverage_notebooks_serial_create_with_collapse python3 -m coverage run --source=nbvalx -m pytest --ipynb-action=create-notebooks --tag-collapse tests/notebooks || (($?==$NO_TESTS_COLLECTED))
          COVERAGE_FILE=.coverage_notebooks_parallel_create_without_collapse python3 -m coverage run --source=nbvalx -m pytest --ipynb-action=create-notebooks --np=2 tests/notebooks || (($?==$NO_TESTS_COLLECTED))
          COVERAGE_FILE=.coverage_notebooks_parallel_create_with_collapse python3 -m coverage run --source=nbvalx  -m pytest --ipynb-action=create-notebooks --tag-collapse --np=2 tests/notebooks || (($?==$NO_TESTS_COLLECTED))
        shell: bash
      - name: Run ruff on notebooks test files
        run: |
          python3 -m nbqa ruff .
      - name: Run isort on notebooks test files
        run: |
          python3 -m nbqa isort --check --diff .
      - name: Run mypy on notebooks test files
        run: |
          python3 -m nbqa mypy .
      - name: Check for stray outputs, counts and metadata in notebooks test files
        uses: RBniCS/check-jupyter-metadata-action@main
        with:
          pattern: "tests/notebooks/data/**/*.ipynb"
      - name: Run notebooks tests (serial, without collapse)
        run: |
          COVERAGE_FILE=.coverage_notebooks_serial_without_collapse python3 -m coverage run --source=nbvalx -m pytest tests/notebooks
      - name: Run notebooks tests (serial, with collapse)
        run: |
          COVERAGE_FILE=.coverage_notebooks_serial_with_collapse python3 -m coverage run --source=nbvalx -m pytest --tag-collapse tests/notebooks
      - name: Run notebooks tests (parallel)
        run: |
          COVERAGE_FILE=.coverage_notebooks_parallel python3 -m coverage run --source=nbvalx -m pytest --np 2 tests/notebooks
      - name: Combine coverage reports
        run: |
          python3 -m coverage combine .coverage*
          python3 -m coverage report --fail-under=100 --show-missing --skip-covered
      - name: Upload notebooks logs as an artifact in case of failure
        if: failure() || cancelled()
        uses: actions/upload-artifact@v3
        with:
          name: "notebooks-logs-${{ matrix.python-version }}"
          path: |
            **/.ipynb_pytest/**/*.log*

  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'multiphenics/nbvalx' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci.yml
          days-elapsed: 50
