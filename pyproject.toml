[build-system]
requires = ["setuptools>=62", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nbvalx"
version = "0.0.dev1"
authors = [
    {name = "Francesco Ballarin (and contributors)", email = "francesco.ballarin@unicatt.it"},
]
maintainers = [
    {name = "Francesco Ballarin", email = "francesco.ballarin@unicatt.it"},
]
description = "Collection of pytest utils built on top of nbval"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
    # list dependencies that are just enough to import nbvalx main module (i.e., nbvalx/jupyter_magics.py).
    # Requirements for other modules (i.e., pytest hooks) are listed as optional dependencies. This allows to have
    # a minimal installation for users who are just willing to use nbvalx in jupyter notebooks.
    "ipython"
]

[project.urls]
homepage = "https://github.com/multiphenics/nbvalx"
repository = "https://github.com/multiphenics/nbvalx"
issues = "https://github.com/multiphenics/nbvalx/issues"
funding = "https://github.com/sponsors/francesco-ballarin"

[project.optional-dependencies]
unit_tests = [
    # this contains optional dependencies that users should have in order to use nbvalx/pytest_hooks_unit_tests.py
    "mpi4py",
    "pytest >= 7.0"
]
notebooks = [
    # this contains optional dependencies that users should have in order to use nbvalx/pytest_hooks_notebooks.py
    "ipyparallel",
    "mpi4py",
    "nbval",
    "pytest >= 7.0"
]
docs = [
    "sphinx"
]
lint = [
    "flake8",
    "flake8-annotations",
    "flake8-docstrings",
    "flake8-import-restrictions",
    "flake8-isort",
    "Flake8-pyproject",
    "flake8-quotes",
    'mypy;python_version >= "3.8"'
]
tests = [
    # not to be confused with unit_tests: this contains requirements to test nbvalx itself, not to use it
    "coverage[toml]",
    "nbqa",
    "pytest"
]

[tool.flake8]
max-line-length = 120
show-source = true
docstring-convention = "numpy"
inline-quotes = "double"
imr241_exclude = ["nbvalx", "nbvalx.*"]
imr245_include = "*"
imr245_exclude = ["nbvalx", "nbvalx.*"]
ignore = ["ANN101", "W503"]
exclude = [".eggs", "build", "dist"]
per-file-ignores = [
    "nbvalx/__init__.py: F401",
    "tests/notebooks/data/**/*.py: D100, I004"
]

[tool.isort]
line_length = 120
multi_line_output = 4
order_by_type = false

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
exclude = "(^\\.eggs|^build|^dist|conftest\\.py$)"
no_implicit_optional = true
pretty = true
show_error_codes = true
strict = true
warn_return_any = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "ipyparallel"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "nbformat"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "nbval.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "py"
ignore_missing_imports = true

[tool.setuptools.package-data]
nbvalx = ["py.typed"]
